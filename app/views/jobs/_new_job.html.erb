<%= form_with model: @job, id: 'new_job_form', remote: true do |f| %>

  <h4>New Job Posting</h4>
  <%= f.hidden_field :hospital_id, :value=>current_hospital.id %>

    <div class="form-group">
      <%= f.label :name %>
      <%= f.text_field :name, :required => true %>
    </div>
    <div class="form-group">
      <%= f.label :description %>
      <%= f.text_field :description, :required => true %>
    </div>

    <!-- <div class="form-group">
      <%#= f.label :rate %>
      <%#= f.number_field :rate, value: number_to_currency(f.object.rate.to_f, delimiter: '', unit: ''), step: :any, :required => true %>
    </div> -->

    <div class="form-group">
      <%= f.label :rate %>
      <%#= f.select(:rate_select, options_for_select([['$100', '100'], ['$200', '200']]), include_blank: true) %>

      <%#= collection_select(:job, :rate_select, Rate.all, :id, :name, {}, { :multiple => false }) %>
      <%#= range_field(:job, :rate_select, in: 1..100, :step => 1 ) %>
      <%= range_field(:job, :rate, in: 100..1000, :step => 10 ) %>
      <!-- <span class="value"> </span> -->

    </div>






    <!-- <script type="text/javascript">
    $(document).ready(function(){
    updateRangeValue($('input[type=range]'));
    $('input[type=range]').on('input change',function(){
        var input = $(this);
        updateRangeValue(input);
    });
});
function getRangeGradient(color1,color2,value,maximum){
    var gradient = "linear-gradient(to right, ";
    var breakPoint = (value/maximum)*100;

    var attrValue = gradient + color1 + " 0%, " + color1 + " " + breakPoint + "%, " + color2 + " " + breakPoint + "%, " + color2 + " 100%)";
    return attrValue;
}
function updateRangeValue(input){
    var selectedColor = "#428bca";
    var nonSelectedColor = "#ddd";

    var value = input.val();
    var maximum = input.attr('max');
    var inputWidth = input.width();
    var background = getRangeGradient(selectedColor, nonSelectedColor, value, maximum);

    var offLeft = Math.floor((value / maximum) * inputWidth - (((value / maximum) * inputWidth - inputWidth/2) / 100) * 24);
    var offLeftAbs = value == maximum ? input.offset().left - 15 + offLeft : input.offset().left - 10 + offLeft;
    input.next('.text').css({'left': offLeftAbs +'px'});
    input.next('.text').html(value);
    input.css('background', background);
}
    </script> -->



    <div class="form-group">
      <h5>How many positions do you need filled?</h5>
      <%= f.hidden_field :job_id, :value => params[:id] %>
      <%= f.label :number_of_slots %>
      <%= f.text_field :slot_num %>
    </div>

    <div class="actions">
      <%= f.submit id: 'submit_job', class:'btn #bdbdbd grey lighten-1' %>
      <%= submit_tag("Cancel", :id => "Cancel", class:"btn #bdbdbd grey lighten-1")%>

    </div>

    <script language="javascript">
      $(document).ready(function() {
        $('#Cancel').click(function() {
          $('#new_job_form').hide();
        })
      });
    </script>

    <% end %>
